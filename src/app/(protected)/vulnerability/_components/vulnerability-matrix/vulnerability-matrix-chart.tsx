"use client"

import { Chartjs } from "@/components/chartjs/chartjs"
import { CHART_COLORS, points, transparentize } from "@/components/chartjs/chartjs-utils"
import { ChartConfiguration } from "chart.js"

const quadrants = {
	id: "quadrants",
	beforeDraw(chart: any, args: any, options: any) {
		const {
			ctx,
			chartArea: { left, top, right, bottom },
			scales: { x, y }
		} = chart
		const midX = x.getPixelForValue(0)
		const midY = y.getPixelForValue(0)
		ctx.save()
		ctx.fillStyle = options.topLeft
		ctx.fillRect(left, top, midX - left, midY - top)
		ctx.fillStyle = options.topRight
		ctx.fillRect(midX, top, right - midX, midY - top)
		ctx.fillStyle = options.bottomRight
		ctx.fillRect(midX, midY, right - midX, bottom - midY)
		ctx.fillStyle = options.bottomLeft
		ctx.fillRect(left, midY, midX - left, bottom - midY)
		ctx.restore()
	}
}

const DATA_COUNT = 50
const NUMBER_CFG = { count: DATA_COUNT, min: -100, max: 100 }
const data = {
	datasets: [
		{
			label: "Dataset 1",
			data: points(NUMBER_CFG),
			borderColor: CHART_COLORS.red,
			backgroundColor: transparentize(CHART_COLORS.red, 0.5)
		},
		{
			label: "Dataset 2",
			data: points(NUMBER_CFG),
			borderColor: CHART_COLORS.blue,
			backgroundColor: transparentize(CHART_COLORS.blue, 0.5)
		}
	]
}

const config: ChartConfiguration | any = {
	type: "scatter",
	data: data,
	options: {
		plugins: {
			quadrants: {
				topLeft: "#fff",
				topRight: "#fff",
				bottomRight: "#fff",
				bottomLeft: "#fff"
			},
			datalabels: {
				display: false
			}
		},
		scales: {
			x: {
				ticks: {
					display: false
				},
				grid: {
					color: function (context: any) {
						if (context.tick.value === 0) {
							return "#F1F1F1" // Color para la línea del eje central
						}
						return "#fff" // Color para otras líneas de la cuadrícula
					}
				},
				border: {
					display: false
				}
			},
			y: {
				ticks: {
					display: false
				},
				grid: {
					color: function (context: any) {
						if (context.tick.value === 0) {
							return "#F1F1F1" // Color para la línea del eje central
						}
						return "#fff" // Color para otras líneas de la cuadrícula
					}
				},
				border: {
					display: false
				}
			}
		}
	},
	plugins: [quadrants]
}
export function VulnerabilityMatrixChart() {
	return <Chartjs config={config} height={120}></Chartjs>
}
